# Disable SELinux
- name: diskable SELinux
  selinux:
    state: disabled

#- name: Stop service firewalld, if started
#  ansible.builtin.service:
#    name: firewalld
#    state: stopped
#    enabled: no

- name: Set a hostname
  ansible.builtin.hostname:
    name: "{{ hostname }}"

- name: install Base package
  yum:
    name: "{{ item }}"
    state: latest
  loop: "{{ base_packages }}"

# set the TimeZone    
- name: Set timezone to Asia/Manila
  community.general.timezone:
    name: "{{ time_zone }}"



- name: Set sysctl file limits
  #pam_limits: domain='*' limit_type=`item`.`limit_type` limit_item=`item`.`limit_item` value=`item`.`value` 
  pam_limits:
      dest: "{{ item.dest }}"
      domain: '*'
      limit_type: "{{ item.limit_type }}"
      limit_item: "{{ item.limit_item }}"
      value: "{{ item.value }}"
  with_items:
      - { dest: '/etc/security/limits.conf',limit_type: 'soft',limit_item: 'nofile', value: '655350' }
      - { dest: '/etc/security/limits.conf',limit_type: 'hard',limit_item: 'nofile', value: '655350'}
      - { dest: '/etc/security/limits.conf',limit_type: 'soft',limit_item: 'nproc', value: '102400' }
      - { dest: '/etc/security/limits.conf',limit_type: 'hard',limit_item: 'nproc', value: '102400' }
      - { dest: '/etc/security/limits.conf',limit_type: 'soft',limit_item: 'sigpending', value: '255377' }
      - { dest: '/etc/security/limits.conf',limit_type: 'hard',limit_item: 'sigpending', value: '255377' }
      - { dest: '/etc/security/limits.d/90-nproc.conf', limit_type: 'soft',limit_item: 'nproc', value: '262144' }
      - { dest: '/etc/security/limits.d/90-nproc.conf', limit_type: 'hard',limit_item: 'nproc', value: '262144' }
  tags:
      - setlimits

# add ops group
- name: Ensure group "ops" exists
  ansible.builtin.group:
    name: ops
    state: present

# add ops user
- name: Add the user 'ops' with a bash shell, appending the group ops 
  ansible.builtin.user:
    name: ops 
    shell: /bin/bash
    groups: ops
    append: yes

# add sudo previleges to the ops user
- name: Config /etc/sudoers
  lineinfile: dest=/etc/sudoers state=present  line='{{item}}' validate='visudo -cf %s'
  with_items:
    - "ops ALL=(ALL) NOPASSWD: ALL"
    - "Defaults: ops !requiretty"

- name: Set up multiple authorized keys
  authorized_key:
    user: ops
    state: present
    key: '{{ item }}'
  with_file: "{{ ssh_pub_key }}"
  

# config ssh config
- name: Update sshd configuration safely, avoid locking yourself out
  ansible.builtin.template:
    src: /etc/ssh/sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: '0600'
    validate: /usr/sbin/sshd -t -f %s
    backup: yes
